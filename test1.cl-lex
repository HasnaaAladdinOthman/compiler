3
CLASS
class
3
TYPEID
Foo
3
OBJECTID
inherits
3
TYPEID
Bazz
3
LBRACE
{
4
OBJECTID
a
4
COLON
:
4
TYPEID
Razz
4
ASSIGN
<-
4
CASE
case
4
OBJECTID
self
4
OF
of
5
OBJECTID
n
5
COLON
:
5
TYPEID
Razz
5
DARROW
=>
5
LPAREN
(
5
NEW
new
5
TYPEID
Bar
5
RPAREN
)
5
SEMICOLON
;
6
OBJECTID
n
6
COLON
:
6
TYPEID
Foo
6
DARROW
=>
6
LPAREN
(
6
NEW
new
6
TYPEID
Razz
6
RPAREN
)
6
SEMICOLON
;
7
OBJECTID
n
7
COLON
:
7
TYPEID
Bar
7
DARROW
=>
7
OBJECTID
n
7
SEMICOLON
;
8
ESAC
esac
8
SEMICOLON
;
10
OBJECTID
b
10
COLON
:
10
TYPEID
Int
10
ASSIGN
<-
10
OBJECTID
a
10
DOT
.
10
OBJECTID
doh
10
LPAREN
(
10
RPAREN
)
10
PLUS
+
10
OBJECTID
g
10
DOT
.
10
OBJECTID
doh
10
LPAREN
(
10
RPAREN
)
10
PLUS
+
10
OBJECTID
doh
10
LPAREN
(
10
RPAREN
)
10
PLUS
+
10
OBJECTID
printh
10
LPAREN
(
10
RPAREN
)
10
SEMICOLON
;
12
OBJECTID
doh
12
LPAREN
(
12
RPAREN
)
12
COLON
:
12
TYPEID
Int
12
LBRACE
{
12
LPAREN
(
12
LET
let
12
OBJECTID
i
12
COLON
:
12
TYPEID
Int
12
ASSIGN
<-
12
OBJECTID
h
12
IN
in
12
LBRACE
{
12
OBJECTID
h
12
ASSIGN
<-
12
OBJECTID
h
12
PLUS
+
12
INT_CONST
2
12
SEMICOLON
;
12
OBJECTID
i
12
SEMICOLON
;
12
RBRACE
}
12
RPAREN
)
12
RBRACE
}
12
SEMICOLON
;
14
RBRACE
}
14
SEMICOLON
;
16
CLASS
class
16
TYPEID
Bar
16
OBJECTID
inherits
16
TYPEID
Razz
16
LBRACE
{
18
OBJECTID
c
18
COLON
:
18
TYPEID
Int
18
ASSIGN
<-
18
OBJECTID
doh
18
LPAREN
(
18
RPAREN
)
18
SEMICOLON
;
20
OBJECTID
d
20
COLON
:
20
TYPEID
Object
20
ASSIGN
<-
20
OBJECTID
printh
20
LPAREN
(
20
RPAREN
)
20
SEMICOLON
;
21
RBRACE
}
21
SEMICOLON
;
24
CLASS
class
24
TYPEID
Razz
24
OBJECTID
inherits
24
TYPEID
Foo
24
LBRACE
{
26
OBJECTID
e
26
COLON
:
26
TYPEID
Bar
26
ASSIGN
<-
26
CASE
case
26
OBJECTID
self
26
OF
of
27
OBJECTID
n
27
COLON
:
27
TYPEID
Razz
27
DARROW
=>
27
LPAREN
(
27
NEW
new
27
TYPEID
Bar
27
RPAREN
)
27
SEMICOLON
;
28
OBJECTID
n
28
COLON
:
28
TYPEID
Bar
28
DARROW
=>
28
OBJECTID
n
28
SEMICOLON
;
29
ESAC
esac
29
SEMICOLON
;
31
OBJECTID
f
31
COLON
:
31
TYPEID
Int
31
ASSIGN
<-
31
OBJECTID
a
31
ATSYM
@
31
TYPEID
Bazz
31
DOT
.
31
OBJECTID
doh
31
LPAREN
(
31
RPAREN
)
31
PLUS
+
31
OBJECTID
g
31
DOT
.
31
OBJECTID
doh
31
LPAREN
(
31
RPAREN
)
31
PLUS
+
31
OBJECTID
e
31
DOT
.
31
OBJECTID
doh
31
LPAREN
(
31
RPAREN
)
31
PLUS
+
31
OBJECTID
doh
31
LPAREN
(
31
RPAREN
)
31
PLUS
+
31
OBJECTID
printh
31
LPAREN
(
31
RPAREN
)
31
SEMICOLON
;
33
RBRACE
}
33
SEMICOLON
;
35
CLASS
class
35
TYPEID
Bazz
35
OBJECTID
inherits
35
TYPEID
IO
35
LBRACE
{
37
OBJECTID
h
37
COLON
:
37
TYPEID
Int
37
ASSIGN
<-
37
INT_CONST
1
37
SEMICOLON
;
39
OBJECTID
g
39
COLON
:
39
TYPEID
Foo
39
ASSIGN
<-
39
CASE
case
39
OBJECTID
self
39
OF
of
40
OBJECTID
n
40
COLON
:
40
TYPEID
Bazz
40
DARROW
=>
40
LPAREN
(
40
NEW
new
40
TYPEID
Foo
40
RPAREN
)
40
SEMICOLON
;
41
OBJECTID
n
41
COLON
:
41
TYPEID
Razz
41
DARROW
=>
41
LPAREN
(
41
NEW
new
41
TYPEID
Bar
41
RPAREN
)
41
SEMICOLON
;
42
OBJECTID
n
42
COLON
:
42
TYPEID
Foo
42
DARROW
=>
42
LPAREN
(
42
NEW
new
42
TYPEID
Razz
42
RPAREN
)
42
SEMICOLON
;
43
OBJECTID
n
43
COLON
:
43
TYPEID
Bar
43
DARROW
=>
43
OBJECTID
n
43
SEMICOLON
;
44
ESAC
esac
44
SEMICOLON
;
46
OBJECTID
i
46
COLON
:
46
TYPEID
Object
46
ASSIGN
<-
46
OBJECTID
printh
46
LPAREN
(
46
RPAREN
)
46
SEMICOLON
;
48
OBJECTID
printh
48
LPAREN
(
48
RPAREN
)
48
COLON
:
48
TYPEID
Int
48
LBRACE
{
48
LBRACE
{
48
OBJECTID
out_int
48
LPAREN
(
48
OBJECTID
h
48
RPAREN
)
48
SEMICOLON
;
48
INT_CONST
0
48
SEMICOLON
;
48
RBRACE
}
48
RBRACE
}
48
SEMICOLON
;
50
OBJECTID
doh
50
LPAREN
(
50
RPAREN
)
50
COLON
:
50
TYPEID
Int
50
LBRACE
{
50
LPAREN
(
50
LET
let
50
OBJECTID
i
50
COLON
:
50
TYPEID
Int
50
ASSIGN
<-
50
OBJECTID
h
50
IN
in
50
LBRACE
{
50
OBJECTID
h
50
ASSIGN
<-
50
OBJECTID
h
50
PLUS
+
50
INT_CONST
1
50
SEMICOLON
;
50
OBJECTID
i
50
SEMICOLON
;
50
RBRACE
}
50
RPAREN
)
50
RBRACE
}
50
SEMICOLON
;
51
RBRACE
}
51
SEMICOLON
;
54
CLASS
class
54
TYPEID
Main
54
OBJECTID
inherits
54
TYPEID
IO
54
LBRACE
{
55
OBJECTID
a
55
COLON
:
55
TYPEID
Bazz
55
ASSIGN
<-
55
NEW
new
55
TYPEID
Bazz
55
SEMICOLON
;
56
OBJECTID
b
56
COLON
:
56
TYPEID
Foo
56
ASSIGN
<-
56
NEW
new
56
TYPEID
Foo
56
SEMICOLON
;
57
OBJECTID
c
57
COLON
:
57
TYPEID
Razz
57
ASSIGN
<-
57
NEW
new
57
TYPEID
Razz
57
SEMICOLON
;
58
OBJECTID
d
58
COLON
:
58
TYPEID
Bar
58
ASSIGN
<-
58
NEW
new
58
TYPEID
Bar
58
SEMICOLON
;
60
OBJECTID
main
60
LPAREN
(
60
RPAREN
)
60
COLON
:
60
TYPEID
String
60
LBRACE
{
60
LBRACE
{
60
OBJECTID
out_string
60
LPAREN
(
60
STR_CONST
"\n"
60
RPAREN
)
60
SEMICOLON
;
60
STR_CONST
"do nothing"
60
SEMICOLON
;
60
RBRACE
}
60
RBRACE
}
60
SEMICOLON
;
62
RBRACE
}
62
SEMICOLON
;
