6
CLASS
class
6
TYPEID
CellularAutomaton
6

inherits
6
TYPEID
IO
6
LBRACE
{
7
OBJECTID
population_map
7
COLON
:
7
TYPEID
String
7
SEMICOLON
;
9
OBJECTID
init
9
LPAREN
(
9
OBJECTID
map
9
COLON
:
9
TYPEID
String
9
RPAREN
)
9
COLON
:
9
TYPEID
SELF_TYPE
9
LBRACE
{
10
LBRACE
{
11
OBJECTID
population_map
11
ASSIGN
<-
11
OBJECTID
map
11
SEMICOLON
;
12
OBJECTID
self
12
SEMICOLON
;
13
RBRACE
}
14
RBRACE
}
14
SEMICOLON
;
16
OBJECTID
print
16
LPAREN
(
16
RPAREN
)
16
COLON
:
16
TYPEID
SELF_TYPE
16
LBRACE
{
17
LBRACE
{
19
OBJECTID
self
19
SEMICOLON
;
20
RBRACE
}
21
RBRACE
}
21
SEMICOLON
;
23
OBJECTID
num_cells
23
LPAREN
(
23
RPAREN
)
23
COLON
:
23
TYPEID
Int
23
LBRACE
{
24
OBJECTID
population_map
24
DOT
.
24
OBJECTID
length
24
LPAREN
(
24
RPAREN
)
25
RBRACE
}
25
SEMICOLON
;
27
OBJECTID
cell
27
LPAREN
(
27
OBJECTID
position
27
COLON
:
27
TYPEID
Int
27
RPAREN
)
27
COLON
:
27
TYPEID
String
27
LBRACE
{
28
OBJECTID
population_map
28
DOT
.
28
OBJECTID
substr
28
LPAREN
(
28
OBJECTID
position
28
COMMA
,
28
INT_CONST
1
28
RPAREN
)
29
RBRACE
}
29
SEMICOLON
;
31
OBJECTID
cell_left_neighbor
31
LPAREN
(
31
OBJECTID
position
31
COLON
:
31
TYPEID
Int
31
RPAREN
)
31
COLON
:
31
TYPEID
String
31
LBRACE
{
32
IF
if
32
OBJECTID
position
32
EQUALS
=
32
INT_CONST
0
32
THEN
then
33
OBJECTID
cell
33
LPAREN
(
33
OBJECTID
num_cells
33
LPAREN
(
33
RPAREN
)
33
MINUS
-
33
INT_CONST
1
33
RPAREN
)
34
ELSE
else
35
OBJECTID
cell
35
LPAREN
(
35
OBJECTID
position
35
MINUS
-
35
INT_CONST
1
35
RPAREN
)
36
FI
fi
37
RBRACE
}
37
SEMICOLON
;
39
OBJECTID
cell_right_neighbor
39
LPAREN
(
39
OBJECTID
position
39
COLON
:
39
TYPEID
Int
39
RPAREN
)
39
COLON
:
39
TYPEID
String
39
LBRACE
{
40
IF
if
40
OBJECTID
position
40
EQUALS
=
40
OBJECTID
num_cells
40
LPAREN
(
40
RPAREN
)
40
MINUS
-
40
INT_CONST
1
40
THEN
then
41
OBJECTID
cell
41
LPAREN
(
41
INT_CONST
0
41
RPAREN
)
42
ELSE
else
43
OBJECTID
cell
43
LPAREN
(
43
OBJECTID
position
43
PLUS
+
43
INT_CONST
1
43
RPAREN
)
44
FI
fi
45
RBRACE
}
45
SEMICOLON
;
49
OBJECTID
cell_at_next_evolution
49
LPAREN
(
49
OBJECTID
position
49
COLON
:
49
TYPEID
Int
49
RPAREN
)
49
COLON
:
49
TYPEID
String
49
LBRACE
{
50
IF
if
50
LPAREN
(
50
IF
if
50
OBJECTID
cell
50
LPAREN
(
50
OBJECTID
position
50
RPAREN
)
50
EQUALS
=
50
STR_CONST
"X"
50
THEN
then
50
INT_CONST
1
50
ELSE
else
50
INT_CONST
0
50
FI
fi
51
PLUS
+
51
IF
if
51
OBJECTID
cell_left_neighbor
51
LPAREN
(
51
OBJECTID
position
51
RPAREN
)
51
EQUALS
=
51
STR_CONST
"X"
51
THEN
then
51
INT_CONST
1
51
ELSE
else
51
INT_CONST
0
51
FI
fi
52
PLUS
+
52
IF
if
52
OBJECTID
cell_right_neighbor
52
LPAREN
(
52
OBJECTID
position
52
RPAREN
)
52
EQUALS
=
52
STR_CONST
"X"
52
THEN
then
52
INT_CONST
1
52
ELSE
else
52
INT_CONST
0
52
FI
fi
53
EQUALS
=
53
INT_CONST
1
53
RPAREN
)
54
THEN
then
55
STR_CONST
"X"
56
ELSE
else
57
STR_CONST
"."
58
FI
fi
59
RBRACE
}
59
SEMICOLON
;
61
OBJECTID
evolve
61
LPAREN
(
61
RPAREN
)
61
COLON
:
61
TYPEID
SELF_TYPE
61
LBRACE
{
62
LPAREN
(
62
LET
let
62
OBJECTID
position
62
COLON
:
62
TYPEID
Int
62
IN
in
63
LPAREN
(
63
LET
let
63
OBJECTID
num
63
COLON
:
63
TYPEID
Int
63
ASSIGN
<-
63
LBRACE
{
63
OBJECTID
m
63
SEMICOLON
;
63
RBRACE
}
63
IN
in
64
LPAREN
(
64
LET
let
64
OBJECTID
temp
64
COLON
:
64
TYPEID
String
64
IN
in
65
LBRACE
{
66
WHILE
while
66
OBJECTID
position
66
LT
<
66
OBJECTID
num
66
LOOP
loop
67
LBRACE
{
68
OBJECTID
temp
68
ASSIGN
<-
68
OBJECTID
temp
68
DOT
.
68
OBJECTID
concat
68
LPAREN
(
68
OBJECTID
cell_at_next_evolution
68
LPAREN
(
68
OBJECTID
position
68
RPAREN
)
68
RPAREN
)
68
SEMICOLON
;
69
OBJECTID
position
69
ASSIGN
<-
69
OBJECTID
position
69
PLUS
+
69
INT_CONST
1
69
SEMICOLON
;
70
RBRACE
}
71
POOL
pool
71
SEMICOLON
;
72
OBJECTID
population_map
72
ASSIGN
<-
72
OBJECTID
temp
72
SEMICOLON
;
73
OBJECTID
self
73
SEMICOLON
;
74
RBRACE
}
75
RPAREN
)
75
RPAREN
)
75
RPAREN
)
76
RBRACE
}
76
SEMICOLON
;
77
RBRACE
}
77
SEMICOLON
;
79
CLASS
class
79
TYPEID
Main
79
LBRACE
{
80
OBJECTID
cells
80
COLON
:
80
TYPEID
CellularAutomaton
80
SEMICOLON
;
82
OBJECTID
main
82
LPAREN
(
82
RPAREN
)
82
COLON
:
82
TYPEID
SELF_TYPE
82
LBRACE
{
83
LBRACE
{
84
OBJECTID
cells
84
ASSIGN
<-
84
LPAREN
(
84
NEW
new
84
TYPEID
CellularAutomaton
84
RPAREN
)
84
DOT
.
84
OBJECTID
init
84
LPAREN
(
84
STR_CONST
"         X         "
84
RPAREN
)
84
SEMICOLON
;
85
OBJECTID
cells
85
DOT
.
85
OBJECTID
print
85
LPAREN
(
85
RPAREN
)
85
SEMICOLON
;
86
LPAREN
(
86
LET
let
86
OBJECTID
countdown
86
COLON
:
86
TYPEID
Int
86
ASSIGN
<-
86
INT_CONST
20
86
IN
in
87
WHILE
while
87
INT_CONST
0
87
LT
<
87
OBJECTID
countdown
87
LOOP
loop
88
LBRACE
{
89
OBJECTID
cells
89
DOT
.
89
OBJECTID
evolve
89
LPAREN
(
89
RPAREN
)
89
SEMICOLON
;
90
OBJECTID
cells
90
DOT
.
90
OBJECTID
print
90
LPAREN
(
90
RPAREN
)
90
SEMICOLON
;
91
OBJECTID
countdown
91
ASSIGN
<-
91
OBJECTID
countdown
91
MINUS
-
91
INT_CONST
1
91
SEMICOLON
;
92
RBRACE
}
93
POOL
pool
94
RPAREN
)
94
SEMICOLON
;
95
OBJECTID
self
95
SEMICOLON
;
96
RBRACE
}
97
RBRACE
}
97
SEMICOLON
;
98
RBRACE
}
98
SEMICOLON
;
